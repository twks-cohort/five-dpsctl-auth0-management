import requests
import os
import json


# load rule set
def load_rule(filename):
  script_file = open(f"rules/{filename}", "r")
  rule_script = script_file.read()
  script_file.close()

  return rule_script

# ===== start

# fetch existing rules for the current tenant
# read access_token from ephemeral (generated by pipeline) file
with open('access_token', 'r') as file:
    auth_token = file.read().rstrip()

# request parameters
header = {"Authorization": f"Bearer {auth_token}"}
url = f"https://{os.environ.get('TENANT')}.us.auth0.com/api/v2/rules"
existing_rules = requests.get(url, headers=header)
existing_rules_names = [rule['name'] for rule in existing_rules.json()]

rules = json.load(open(f"rules/{os.environ.get('TENANT_APPLICATION')}-rules.json"))

for rule in rules:
  rule['script'] = load_rule(rule['script_filename'])
  del rule['script_filename']

  # deploy or patch rule
  if rule['name'] in existing_rules_names:
    for existing_rule in existing_rules.json():
      if rule['name'] == existing_rule['name']:
        response = requests.patch(f"{url}/{existing_rule['id']}", headers=header, json=rule)
  else:
    response = requests.post(url, headers=header, json=rule)